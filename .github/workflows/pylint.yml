# TODO https://github.com/actions/starter-workflows/blob/main/ci/docker-image.yml
# TODO https://github.com/actions/starter-workflows/blob/main/ci/python-app.yml

name: Linting

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Set up Poetry cache for Python dependencies
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
    - name: Install Poetry
      run: |
        curl -sSL -o install-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py
        python install-poetry.py -y
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install --no-interaction
        poetry add pylint
    - name: Analysing the code with pylint
      run: |
        pylint `find -regextype egrep -regex '(.*.py)$' | grep -v ./mib/ | grep -v ./util/ | grep -v get-poetry.py | xargs` | tee pylint.txt
    - name: Upload pylint.txt as artifact
      uses: actions/upload-artifact@v2
      with:
        name: pylint report
        path: pylint.txt
